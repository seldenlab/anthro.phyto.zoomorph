[["geometric-morphometrics.html", "Chapter 3 Geometric morphometrics 3.1 Load packages + data 3.2 Generalised Procrustes Analysis 3.3 Principal Components Analysis 3.4 Define models 3.5 Test Hypothesis", " Chapter 3 Geometric morphometrics 3.1 Load packages + data # load packages #devtools::install_github(&quot;mlcollyer/RRPP&quot;) #devtools::install_github(&quot;geomorphR/geomorph&quot;, ref = &quot;Stable&quot;, build_vignettes = TRUE) library(here) ## here() starts at D:/github/anthro.phyto.zoomorph/supp library(geomorph) ## Loading required package: RRPP ## Loading required package: rgl ## Loading required package: Matrix library(tidyverse) ## -- Attaching packages --------------------------------------- tidyverse 1.3.1 -- ## v ggplot2 3.3.5 v purrr 0.3.4 ## v tibble 3.1.5 v dplyr 1.0.7 ## v tidyr 1.1.4 v stringr 1.4.0 ## v readr 2.0.2 v forcats 0.5.1 ## -- Conflicts ------------------------------------------ tidyverse_conflicts() -- ## x tidyr::expand() masks Matrix::expand() ## x dplyr::filter() masks stats::filter() ## x dplyr::lag() masks stats::lag() ## x tidyr::pack() masks Matrix::pack() ## x tidyr::unpack() masks Matrix::unpack() library(wesanderson) # read GM data source(&#39;readmulti.csv.R&#39;) setwd(&quot;./data&quot;) filelist &lt;- list.files(pattern = &quot;.csv&quot;) coords &lt;- readmulti.csv(filelist) setwd(&quot;../&quot;) # read qualitative data qdata &lt;- read.csv(&quot;qdata.csv&quot;, header = TRUE, row.names = 1) qdata &lt;- qdata[match(dimnames(coords)[[3]], rownames(qdata)),] 3.2 Generalised Procrustes Analysis Landmark data were aligned to a global coordinate system (Kendall 1981, 1984; Slice 2001), achieved through generalised Procrustes superimposition (Rohlf and Slice 1990) performed in R 4.0.3 (R Core Development Team, 2020) using the geomorph library v. 3.3.2 (Adams et al. 2017; Adams and Ot√°rola-Castillo 2013). Procrustes superimposition translates, scales, and rotates the coordinate data to allow for comparisons among objects (Gower 1975; Rohlf and Slice 1990). The geomorph package uses a partial Procrustes superimposition that projects the aligned specimens into tangent space subsequent to alignment in preparation for the use of multivariate methods that assume linear space (Rohlf 1999; Slice 2001). # gpa Y.gpa &lt;- gpagen(coords, PrinAxes = TRUE, ProcD = TRUE, Proj = TRUE, print.progress = FALSE) # geomorph data frame gdf &lt;- geomorph.data.frame(shape = Y.gpa$coords, size = Y.gpa$Csize, group = qdata$group, type = qdata$type) # render 3d gpa plot plot(Y.gpa) # gpa plot #knitr::include_graphics(&#39;images/gpa3d.png&#39;) # add centroid size to qdata qdata$csz &lt;- Y.gpa$Csize # print updated qdata with centroid size knitr::kable(qdata, align = &quot;lccccc&quot;, caption = &quot;Modified attributes included in qdata.&quot;) Table 3.1: Modified attributes included in qdata. group type csz 1608101 phytomorph bottle 480.3691 1608102 phytomorph bottle 642.7924 1608111 anthropomorph jar 585.9878 1608122 zoomorph bottle 578.2339 1608124 zoomorph bottle 543.0810 160836 phytomorph bottle 509.1797 160839 zoomorph jar 416.4591 160844 anthropomorph jar 607.4952 160846 zoomorph bottle 545.1291 160847 anthropomorph bottle 416.4516 160848 anthropomorph jar 468.6945 160849 anthropomorph bottle 453.0625 160850 anthropomorph bottle 751.5635 160852 zoomorph bottle 512.1550 160852x anthropomorph jar 596.2446 160859 zoomorph bottle 512.3332 160860 anthropomorph jar 449.6768 160868 zoomorph bottle 674.0455 160873 anthropomorph jar 590.1911 160874 zoomorph jar 574.2754 160875 anthropomorph bottle 687.1416 160876 anthropomorph bottle 591.4190 160881 anthropomorph jar 416.0126 160882 zoomorph bottle 544.4697 160884 zoomorph jar 418.5339 160886 zoomorph bottle 441.5053 160888 anthropomorph bottle 379.4152 160892 anthropomorph jar 384.3096 3.2.1 Boxplot # attributes for boxplot csz &lt;- qdata$csz group &lt;- qdata$group type &lt;- qdata$type # boxplot of vessel centroid size by group csz.group &lt;- ggplot(qdata, aes(x = group, y = csz, color = group)) + geom_boxplot(notch = FALSE) + geom_dotplot(binaxis = &#39;y&#39;, stackdir = &#39;center&#39;, dotsize = 0.3) + scale_colour_manual(values = wes_palette(&quot;Moonrise2&quot;)) + theme(legend.position = &quot;none&quot;) + labs(x = &#39;Group&#39;, y = &#39;Centroid Size&#39;) # render plot csz.group ## Bin width defaults to 1/30 of the range of the data. Pick better value with `binwidth`. Figure 3.1: Boxplot of centroid size by spatial/temporal unit. # boxplot of vessel centroid size by type csz.type &lt;- ggplot(qdata, aes(x = type, y = csz, color = type)) + geom_boxplot(notch = FALSE) + geom_dotplot(binaxis = &#39;y&#39;, stackdir = &#39;center&#39;, dotsize = 0.3) + scale_colour_manual(values = wes_palette(&quot;Moonrise2&quot;)) + theme(legend.position = &quot;none&quot;) + labs(x = &#39;Group&#39;, y = &#39;Centroid Size&#39;) # render plot csz.type ## Bin width defaults to 1/30 of the range of the data. Pick better value with `binwidth`. Figure 3.2: Boxplot of centroid size by spatial/temporal unit. 3.3 Principal Components Analysis Principal components analysis (Jolliffe 2002) was used to visualise shape variation among the bottles. The shape changes described by each principal axis are commonly visualised using thin-plate spline warping of a reference 3D mesh (Klingenberg 2013; Sherratt et al. 2014). # principal components analysis pca&lt;-gm.prcomp(Y.gpa$coords) summary(pca) ## ## Ordination type: Principal Component Analysis ## Centering by OLS mean ## Orthogonal projection of OLS residuals ## Number of observations: 28 ## Number of vectors 27 ## ## Importance of Components: ## Comp1 Comp2 Comp3 Comp4 ## Eigenvalues 0.003294174 0.002979633 0.001010952 0.0008667081 ## Proportion of Variance 0.356118896 0.322115291 0.109289624 0.0936960721 ## Cumulative Proportion 0.356118896 0.678234187 0.787523811 0.8812198830 ## Comp5 Comp6 Comp7 Comp8 ## Eigenvalues 0.0003340314 0.0002821747 0.0002072099 0.0000650576 ## Proportion of Variance 0.0361106900 0.0305046935 0.0224005681 0.0070330966 ## Cumulative Proportion 0.9173305731 0.9478352666 0.9702358346 0.9772689312 ## Comp9 Comp10 Comp11 Comp12 ## Eigenvalues 4.284672e-05 3.993731e-05 3.273074e-05 2.156769e-05 ## Proportion of Variance 4.631973e-03 4.317450e-03 3.538379e-03 2.331590e-03 ## Cumulative Proportion 9.819009e-01 9.862184e-01 9.897567e-01 9.920883e-01 ## Comp13 Comp14 Comp15 Comp16 ## Eigenvalues 1.988888e-05 1.505334e-05 8.615991e-06 6.697543e-06 ## Proportion of Variance 2.150101e-03 1.627352e-03 9.314376e-04 7.240424e-04 ## Cumulative Proportion 9.942384e-01 9.958658e-01 9.967972e-01 9.975213e-01 ## Comp17 Comp18 Comp19 Comp20 ## Eigenvalues 5.504860e-06 4.519483e-06 3.192575e-06 2.750250e-06 ## Proportion of Variance 5.951067e-04 4.885818e-04 3.451355e-04 2.973177e-04 ## Cumulative Proportion 9.981164e-01 9.986049e-01 9.989501e-01 9.992474e-01 ## Comp21 Comp22 Comp23 Comp24 ## Eigenvalues 1.988740e-06 1.630011e-06 1.205628e-06 8.531169e-07 ## Proportion of Variance 2.149941e-04 1.762135e-04 1.303352e-04 9.222679e-05 ## Cumulative Proportion 9.994624e-01 9.996386e-01 9.997689e-01 9.998612e-01 ## Comp25 Comp26 Comp27 ## Eigenvalues 7.930714e-07 4.791956e-07 1.196277e-08 ## Proportion of Variance 8.573553e-05 5.180376e-05 1.293243e-06 ## Cumulative Proportion 9.999469e-01 9.999987e-01 1.000000e+00 # set plot parameters (groups) pch.gps &lt;- c(15:17)[as.factor(group)] col.gps &lt;- wes_palette(&quot;Moonrise2&quot;)[as.factor(group)] col.hull &lt;- c(&quot;#C27D38&quot;,&quot;#CCC591&quot;,&quot;#798E87&quot;) # plot pca by comb pc.plot &lt;- plot(pca, asp = 1, pch = pch.gps, col = col.gps) shapeHulls(pc.plot, groups = group, group.cols = col.hull) # set plot parameters (types) pch.gps.type &lt;- c(15,17)[as.factor(type)] col.gps.type &lt;- wes_palette(&quot;Moonrise2&quot;)[as.factor(type)] col.hull.type &lt;- c(&quot;#798E87&quot;,&quot;#C27D38&quot;) # plot pca by comb pc.plot.type &lt;- plot(pca, asp = 1, pch = pch.gps.type, col = col.gps.type) shapeHulls(pc.plot.type, groups = type, group.cols = col.hull.type) # pca warp #knitr::include_graphics(&#39;images/pca-warp.jpg&#39;) 3.4 Define models A residual randomisation permutation procedure (RRPP; n = 10,000 permutations) was used for all Procrustes ANOVAs (Adams and Collyer 2015; Michael L. Collyer and Adams 2018), which has higher statistical power and a greater ability to identify patterns in the data should they be present (Anderson and Ter Braak 2003). To assess whether shape changes differ by group (geography and time), Procrustes ANOVAs (Goodall 1991) were also run that enlist effect-sizes (zscores) computed as standard deviates of the generated sampling distributions (M. L. Collyer, Sekora, and Adams 2015). 3.4.1 Size and shape # size as a function of anthro-phyto-zoo? fit.size &lt;- procD.lm(size ~ group, data = gdf, print.progress = FALSE, iter = 9999) # shape as a function of anthro-phyto-zoo? fit.shape &lt;- procD.lm(shape ~ group, data = gdf, print.progress = FALSE, iter = 9999) # size as a function of type? fit.size.type &lt;- procD.lm(size ~ type, data = gdf, print.progress = FALSE, iter = 9999) # shape as a function of type? fit.shape.type &lt;- procD.lm(shape ~ type, data = gdf, print.progress = FALSE, iter = 9999) 3.5 Test Hypothesis Hypothesis:  3.5.1 Procrustes ANOVA # ANOVA: do group sizes differ? anova(fit.size) ## ## Analysis of Variance, using Residual Randomization ## Permutation procedure: Randomization of null model residuals ## Number of permutations: 10000 ## Estimation method: Ordinary Least Squares ## Sums of Squares and Cross-products: Type I ## Effect sizes (Z) based on F distributions ## ## Df SS MS Rsq F Z Pr(&gt;F) ## group 2 994 497.2 0.00389 0.0488 -1.6901 0.9531 ## Residuals 25 254499 10180.0 0.99611 ## Total 27 255493 ## ## Call: procD.lm(f1 = size ~ group, iter = 9999, data = gdf, print.progress = FALSE) # ANOVA: do group shapes differ? anova(fit.shape) ## ## Analysis of Variance, using Residual Randomization ## Permutation procedure: Randomization of null model residuals ## Number of permutations: 10000 ## Estimation method: Ordinary Least Squares ## Sums of Squares and Cross-products: Type I ## Effect sizes (Z) based on F distributions ## ## Df SS MS Rsq F Z Pr(&gt;F) ## group 2 0.014672 0.0073359 0.05874 0.7801 -0.35144 0.6357 ## Residuals 25 0.235084 0.0094034 0.94126 ## Total 27 0.249756 ## ## Call: procD.lm(f1 = shape ~ group, iter = 9999, data = gdf, print.progress = FALSE) # ANOVA: do type sizes differ? anova(fit.size.type) ## ## Analysis of Variance, using Residual Randomization ## Permutation procedure: Randomization of null model residuals ## Number of permutations: 10000 ## Estimation method: Ordinary Least Squares ## Sums of Squares and Cross-products: Type I ## Effect sizes (Z) based on F distributions ## ## Df SS MS Rsq F Z Pr(&gt;F) ## type 1 13005 13004.8 0.0509 1.3944 0.72524 0.2476 ## Residuals 26 242489 9326.5 0.9491 ## Total 27 255493 ## ## Call: procD.lm(f1 = size ~ type, iter = 9999, data = gdf, print.progress = FALSE) # ANOVA: do type shapes differ? anova(fit.shape.type) ## ## Analysis of Variance, using Residual Randomization ## Permutation procedure: Randomization of null model residuals ## Number of permutations: 10000 ## Estimation method: Ordinary Least Squares ## Sums of Squares and Cross-products: Type I ## Effect sizes (Z) based on F distributions ## ## Df SS MS Rsq F Z Pr(&gt;F) ## type 1 0.058405 0.058405 0.23385 7.9359 3.8403 1e-04 *** ## Residuals 26 0.191350 0.007360 0.76615 ## Total 27 0.249756 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Call: procD.lm(f1 = shape ~ type, iter = 9999, data = gdf, print.progress = FALSE) 3.5.2 Mean Shapes # subset landmark coordinates to produce mean shapes new.coords&lt;-coords.subset(A = Y.gpa$coords, group = qdata$type) names(new.coords) ## [1] &quot;bottle&quot; &quot;jar&quot; # group shape means mean &lt;- lapply(new.coords, mshape) # plot mean shapes (type) plot(mean$bottle) plot(mean$jar) # comparison plots plotRefToTarget(mean$bottle, mean$jar, method = c(&quot;points&quot;), mag = 1) # subset landmark coordinates to produce mean shapes (group) new.coords&lt;-coords.subset(A = Y.gpa$coords, group = qdata$group) names(new.coords) ## [1] &quot;anthropomorph&quot; &quot;phytomorph&quot; &quot;zoomorph&quot; # group shape means mean &lt;- lapply(new.coords, mshape) # plot mean shapes plot(mean$anthropomorph) plot(mean$phytomorph) plot(mean$zoomorph) # comparison plots plotRefToTarget(mean$anthropomorph, mean$phytomorph, method = c(&quot;points&quot;), mag = 1) plotRefToTarget(mean$anthropomorph, mean$phytomorph, method = &quot;points&quot;, mag = 1) plotRefToTarget(mean$phytomorph, mean$zoomorph, method = &quot;points&quot;, mag = 1) #knitr::include_graphics(&#39;images/comp.composite.jpg&#39;) References "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
